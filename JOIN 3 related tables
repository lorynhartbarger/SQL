/* First, I created three tables with related information */

CREATE TABLE Kardashians 
(id INTEGER PRIMARY KEY, name TEXT, age INTEGER, favorite_sister INTEGER);

INSERT INTO Kardashians 
VALUES
(1,"Kim", 41, 2), 
(2, "Khloe", 37, 1),
(3, "Kourtney", 43, 4),
(4, "Kendall", 26, 3),
(5, "Kylie", 24, 2),
(6, "Kris", 66, 5), 
(7, "Rob", 35, 2);

CREATE TABLE Siblings
(id INTEGER PRIMARY KEY, person_id INTEGER, older_sibling INTEGER, younger_sibling INTEGER);

INSERT INTO Siblings (id, person_id)
VALUES
(1, 6);

INSERT INTO Siblings (id, person_id, younger_sibling)
VALUES
(2, 3, 1);

INSERT INTO Siblings
VALUES
(3, 1, 3, 2),
(4, 2, 1, 7),
(5, 7, 2, 4),
(6, 4, 7, 5);

INSERT INTO Siblings
(id, person_id, older_sibling)
VALUES 
(7, 5, 4);

CREATE TABLE Passions
(id INTEGER PRIMARY KEY, person_id INTEGER, name1 TEXT, name2 TEXT); 

INSERT INTO Passions
VALUES
(1, 5, "Makeup", "Influencing"), 
(2, 4, "Modeling", "Adventures"),
(3, 6, "Drinking", "Making Money"),
(4, 1, "Influencing", "Law School"),
(5, 7, "Socks", "Private Life"),
(6, 2, "Health and Wellness", "Organizing"), 
(7, 3, "Her kids", "Organic All Natural");

/* My first query was to select each family member and their favorite sibling using a SELF JOIN */

SELECT person.name AS person, favorite.name AS favorite
FROM Kardashians AS person 
JOIN Kardashians AS favorite
ON favorite.id = person.favorite_sister; 

/* My next query was to select each family member and thier older and younger siblings connecting the Kardashians table with the siblings table */

SELECT kardashians.name AS person, a.name AS older_sibling, b.name AS younger_sibling
FROM siblings
JOIN Kardashians 
ON siblings.person_id = kardashians.id
LEFT OUTER JOIN Kardashians a
ON siblings.older_sibling = a.id
LEFT OUTER JOIN Kardashians b
ON siblings.younger_sibling = b.id; 

/* My final query was to select each family member, their favorite siblings, and their favorite sibling's passions using a self join and joining the Kardashians table with the passions table */

SELECT kardashians.name AS person, a.name AS favorite_sib, name1 AS passion1, name2 AS passion2 
FROM Kardashians
LEFT OUTER JOIN Kardashians AS a
ON a.id = kardashians.favorite_sister 
LEFT OUTER JOIN Passions
ON passions.person_id = Kardashians.favorite_sister; 
