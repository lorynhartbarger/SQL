/* For this project, I will be analyzing patient demographics and 
medical appointment records. I will find the total number of patients, 
the average age of the patients, the average number of appointments per month, 
determine the busiest day for appointments, the age distribution of the patients,
the cities with the most patients, the average number of appointments per month 
per doctor, and the appointments to patient ratio. */

-- Example Data in PATIENTS Table --
INSERT INTO PATIENTS (PATIENT_ID, PATIENT_NAME, AGE, GENDER, CITY)
VALUES
  (1, 'John Smith', 45, 'Male', 'New York'),
  (2, 'Jane Doe', 32, 'Female', 'Los Angeles'),
  (3, 'David Johnson', 55, 'Male', 'Chicago'),
  (4, 'Emily Wilson', 28, 'Female', 'Houston'),
  (5, 'Michael Brown', 60, 'Male', 'Dallas'),
  (6, 'Sophia Davis', 38, 'Female', 'San Francisco');

-- Example Data in APPOINTMENTS Table --
INSERT INTO APPOINTMENTS (APPOINTMENT_ID, PATIENT_ID, APPOINTMENT_DATE, DOCTOR_NAME, APPOINTMENT_TYPE)
VALUES
  (1, 1, '2023-06-01', 'Dr. Smith', 'General Checkup'),
  (2, 2, '2023-06-03', 'Dr. Johnson', 'Dental Cleaning'),
  (3, 3, '2023-06-05', 'Dr. Davis', 'Cardiology Consultation'),
  (4, 4, '2023-06-07', 'Dr. Wilson', 'Pediatric Vaccination'),
  (5, 5, '2023-06-09', 'Dr. Brown', 'General Checkup'),
  (6, 6, '2023-06-12', 'Dr. Smith', 'Dental Filling'),
  (7, 2, '2023-06-15', 'Dr. Johnson', 'General Checkup'),
  (8, 3, '2023-06-17', 'Dr. Davis', 'Cardiology Consultation'),
  (9, 4, '2023-06-20', 'Dr. Wilson', 'General Checkup'),
  (10, 5, '2023-06-25', 'Dr. Brown', 'Orthopedic Consultation');

-- calculate the total number of patients and the avg age of patients
SELECT 
  COUNT(DISTINCT PATIENT_ID) AS TTL_PT_CNT,
  AVG(AGE) AS AVG_PT_AGE
FROM PATIENTS;

--calculate the total number of doctors, appointments, doctors per patients, 
--doctors per appointments, and patients per appointments

TOTALS_DA:
SELECT 
  COUNT(DISTINCT DOCTOR_NAME) AS TTL_DOCS,
  COUNT(DISTINCT APPOINTMENT_ID) AS TTL_APPTS,
  PATIENT_ID AS PT_ID
FROM APPOINTMENTS;

--calculate the total number of appointments by gender
SELECT
  P.GENDER AS PT_GENDER
  COUNT(*) AS GENDER_APPT_CNT
FROM PATIENTS P
JOIN APPOINTMENTS A ON PATIENT_ID = A.PATIENT_ID
GROUP BY P.GENDER;

--calculate the number of appointments per month
SELECT
  DATE_TRUNC('month', APPOINTMENT_DATE) AS APPT_MONTH,
  COUNT(*) AS MONTHLY_APPT_CNT
FROM APPOINTMENTS
GROUP BY MONTH;

--calculate the average number of appointments per month
SELECT
  AVG(APPOINTMENT_COUNT) AS AVG_APPT_PER_MONTH
FROM (
  SELECT
    DATE_TRUNC('month', APPOINTMENT_DATE) AS APPT_MONTH,
    COUNT(*) AS APPT_CNT_TEMP_2
  FROM APPOINTMENTS
  GROUP BY MONTH
) AS subquery;

--determine the busiest day for appointments
SELECT 
  DATE_TRUNC('day', APPOINTMENT_DATE) AS BUSIEST_APPT_DAY,
  COUNT(*) AS DAILY_APPT_CNT
FROM APPOINTMENTS
GROUP BY APPOINTMENT_DATE
ORDER BY APPOINTMENT_COUNT DESC
LIMIT 1;

--calculate the age distribution of the patients
SELECT
  AGE,
  COUNT(*) AS PT_CNT_BY_GENDER
FROM PATIENTS
GROUP BY AGE
ORDER BY AGE;

--calculate the cities with the most patients
SELECT
  CITY,
  COUNT(*) AS PT_CNT_BY_CITY
FROM PATIENTS
GROUP BY CITY
ORDER BY PATIENT_COUNT DESC;

--calculate the average number of appointments per month per doctor
SELECT
  DOCTOR_NAME,
  DATE_TRUNC('month', APPOINTMENT_DATE) AS APPT_MONTH_2,
  COUNT(*) AS AVG_CNT_PER_MONTH_DOC
FROM APPOINTMENTS
GROUP BY DOCTOR_NAME, APPT_MONTH_2;

--calculate the appointments to patient ratio
SELECT
  COUNT(DISTINCT APPOINTMENT_ID) AS TTL_APPT_1,
  COUNT(DISTINCT PATIENT_ID) AS TTL_PT_1,
  COUNT(DISTINCT APPOINTMENT_ID) / COUNT(DISTINCT PATIENT_ID) AS APPOINTMENTS_TO_PATIENT_RATIO
FROM APPOINTMENTS;







